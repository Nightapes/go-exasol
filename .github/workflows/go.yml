name: Go
on:
  push:
    branches:
      - main
  pull_request:

jobs:
  build:
    strategy:
      matrix:
        go: [ "1.17", "1.18" ]
        db: [ "7.0.18", "7.1.9" ]
    env:
      DEFAULT_GO: "1.18"
      DEFAULT_DB: "7.1.9"
    name: Build with go version ${{ matrix.go }} and db ${{ matrix.db }}
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.go }}
        id: go

      - name: Check out code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - uses: actions/cache@v2
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ matrix.go }}-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-${{ matrix.go }}
            ${{ runner.os }}-go-

      - name: golangci-lint
        uses: golangci/golangci-lint-action@v2
        with:
          version: latest
          skip-go-installation: true # Go already installed by actions/setup-go
          skip-pkg-cache: true # Caching already done by actions/cache
          skip-build-cache: true

      - name: Go build
        run: |
          go clean
          go build

      - name: test
        env:
          DB_VERSION: ${{ matrix.db }}
        run: go test -v -coverprofile=coverage.out ./...

      - name: SonarCloud Scan
        if: matrix.go == env.DEFAULT_GO && matrix.db == env.DEFAULT_DB && github.repository_owner == 'exasol'
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}